@using System.Text.Json;

<h2>API Key Auth</h2>

<div class="row">
    <div class="input-group">
        <label for="apiKey" class="col-sm-2 col-form-label">Ocp-Apim-Subscription-Key</label>
        <div class="col-sm-10">
            <input type="text" class="form-control-plaintext" id="apiKey" @bind="@apiKey" @oninput="OnApiKeyInput" placeholder="APIM subscription key here">
        </div>
    </div>
    <div class="input-group">
        <label for="name" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <input type="text" class="form-control-plaintext" id="name" @bind="@name" @oninput="OnNameInput" placeholder="Your name here">
        </div>
    </div>
    <div class="input-group">
        <button class="btn btn-primary" @onclick="OnApiKeyAuthSubmit">Submit</button>
        <input type="text" class="form-control" readonly value="@endpoint">
    </div>
    <div class="input-group" style="height: 300px;">
        <span class="input-group-text">Result</span>
        <textarea readonly class="form-control mh-100 @backgroundColor" aria-label="Result">@result</textarea>
    </div>
</div>

@code {
    private string? apiKey = default;
    private string? name = default;
    private string? backgroundColor = "text-black bg-light";
    private string? endpoint = default;
    private string? result = default;

    [Parameter]
    public HttpClient? Http { get; set; } = default;

    [Parameter]
    public AppSettings? Settings { get; set; } = default;

    protected void OnApiKeyInput(ChangeEventArgs ev)
    {
        this.apiKey = ev.Value as string;
    }

    protected void OnNameInput(ChangeEventArgs ev)
    {
        this.name = ev.Value as string;
    }

    protected async Task OnApiKeyAuthSubmit()
    {
        if (this.Http is null)
        {
            result = "Http is null";
            backgroundColor = "text-white bg-danger";
            return;
        }

        if (this.Settings is null)
        {
            result = "Settings is null";
            backgroundColor = "text-white bg-danger";
            return;
        }

        if (string.IsNullOrWhiteSpace(this.apiKey))
        {
            result = "Please enter the API key";
            backgroundColor = "text-white bg-danger";
            return;
        }

        if (string.IsNullOrWhiteSpace(this.name))
        {
            result = "Please enter your name";
            backgroundColor = "text-white bg-danger";
            return;
        }

        this.Http.DefaultRequestHeaders.Clear();
        this.Http.DefaultRequestHeaders.Add("Ocp-Apim-Subscription-Key", apiKey);

        var url = $"{this.Settings.ApiKeyAuth.Endpoint.TrimEnd('/')}?name={name}";
        endpoint = url;

        var response = await this.Http.GetFromJsonAsync<object>(url);
        result = JsonSerializer.Serialize(response, new JsonSerializerOptions { WriteIndented = true });
        backgroundColor = "text-white bg-success";
    }
}
